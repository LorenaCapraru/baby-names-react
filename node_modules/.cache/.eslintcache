[{"/Users/lorenacapraru/Documents/GitHub/baby-names-react/src/index.js":"1","/Users/lorenacapraru/Documents/GitHub/baby-names-react/src/App.js":"2","/Users/lorenacapraru/Documents/GitHub/baby-names-react/src/reportWebVitals.js":"3","/Users/lorenacapraru/Documents/GitHub/baby-names-react/src/SplitGender.jsx":"4","/Users/lorenacapraru/Documents/GitHub/baby-names-react/src/Search.jsx":"5"},{"size":535,"mtime":1678037434605,"results":"6","hashOfConfig":"7"},{"size":310,"mtime":1678285522715,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1678037434605,"results":"9","hashOfConfig":"7"},{"size":646,"mtime":1678359379163,"results":"10","hashOfConfig":"7"},{"size":3366,"mtime":1678715427912,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3jyfp9",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/Users/lorenacapraru/Documents/GitHub/baby-names-react/src/index.js",[],[],"/Users/lorenacapraru/Documents/GitHub/baby-names-react/src/App.js",[],[],"/Users/lorenacapraru/Documents/GitHub/baby-names-react/src/reportWebVitals.js",[],[],"/Users/lorenacapraru/Documents/GitHub/baby-names-react/src/SplitGender.jsx",[],[],"/Users/lorenacapraru/Documents/GitHub/baby-names-react/src/Search.jsx",["28"],[],"import { useState, React } from \"react\";\nimport data from \"./babyNamesData.json\";\nimport SplitGender from \"./SplitGender\";\n\nexport default function Search() {\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  const [mainList, setMainList] = useState(data);\n  const [favoriteList, setFavoriteList] = useState([]);\n\n  const [boyList, setBoyList] = useState([]);\n  const [girlList, setGirlList] = useState([]);\n  const [all, setAll] = useState([]);\n\n  function resetAllList() {\n    let newList = [...data];\n    return setAll(newList);\n  }\n\n  function returnBoyList() {\n    let newList = data.filter((el) => el.sex === \"m\");\n    return setBoyList(newList);\n  }\n\n  function returnGirlList() {\n    let newList = data.filter((el) => el.sex === \"f\");\n    return setBoyList(newList);\n  }\n\n  function handleSearchInput(event) {\n    setSearchInput(event.target.value);\n  }\n\n  function addToFavorites(id) {\n    const nameIndex = mainList.findIndex((name) => name.id === id);\n    const newMainList = [...mainList];\n    const removedName = newMainList.splice(nameIndex, 1);\n    setMainList(newMainList);\n    setFavoriteList(favoriteList.concat(removedName));\n  }\n\n  function removeFromFavorites(id) {\n    const nameIndex = mainList.findIndex((name) => name.id === id);\n    const newFavoritesList = [...favoriteList];\n    const removedName = newFavoritesList.splice(nameIndex, 1);\n    setFavoriteList(newFavoritesList);\n    setMainList(mainList.concat(removedName));\n  }\n\n  const filteredNames = data\n    .sort((a, b) => {\n      let fa = a.name;\n      let fb = b.name;\n\n      if (fa < fb) {\n        return -1;\n      }\n      if (fa > fb) {\n        return 1;\n      }\n      return 0;\n    })\n    .filter((babyName) =>\n      babyName.name.toLowerCase().includes(searchInput.toLowerCase())\n    )\n    .map((baby) =>\n      baby.sex === \"m\" ? (\n        <span className=\"babyBoy\">{baby.name}</span>\n      ) : (\n        <span className=\"babyGirl\">{baby.name}</span>\n      )\n    );\n\n  return (\n    <>\n      <div className=\"searchDiv\">\n        <input\n          id=\"searchBar\"\n          type=\"text\"\n          placeholder=\"Search..\"\n          value={searchInput}\n          onChange={handleSearchInput}\n        />\n      </div>\n      <div className=\"radioButton\">\n        <input\n          type=\"radio\"\n          id=\"allGender\"\n          name=\"genderSelector\"\n          onClick={resetAllList}\n        />\n        <label for=\"allGender\">All</label>\n        <input\n          type=\"radio\"\n          id=\"boySelector\"\n          name=\"genderSelector\"\n          onClick={returnBoyList}\n        />\n        <label for=\"boySelector\">BOYS</label>\n        <input\n          type=\"radio\"\n          id=\"girlSelector\"\n          name=\"genderSelector\"\n          onClick={returnGirlList}\n        />\n        <label for=\"girlSelector\">GIRLS</label>\n      </div>\n      <div className=\"favouriteList\">\n        <h2>Favorites:</h2>\n        <SplitGender data={favoriteList} handleClick={removeFromFavorites} />\n      </div>\n      <div className=\"searchOutput\">\n        {searchInput === \"\" ? (\n          boyList.length === 0 && girlList.length === 0 && all.length === 0 ? (\n            <SplitGender data={data} handleClick={addToFavorites} />\n          ) : (\n            <SplitGender data={boyList} handleClick={addToFavorites} />\n          )\n        ) : (\n          filteredNames\n        )}\n      </div>\n    </>\n  );\n}\n",{"ruleId":"29","severity":1,"message":"30","line":12,"column":20,"nodeType":"31","messageId":"32","endLine":12,"endColumn":31},"no-unused-vars","'setGirlList' is assigned a value but never used.","Identifier","unusedVar"]