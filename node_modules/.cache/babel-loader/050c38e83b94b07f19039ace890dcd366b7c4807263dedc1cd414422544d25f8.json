{"ast":null,"code":"var _jsxFileName = \"/Users/lorenacapraru/Documents/GitHub/baby-names-react/src/FilterNames.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FilterNames(props) {\n  const sortedNames = props.names.sort((a, b) => {\n    let fa = a.name;\n    let fb = b.name;\n    if (fa < fb) {\n      return -1;\n    }\n    if (fa > fb) {\n      return 1;\n    }\n    return 0;\n  });\n  const listOfNames = sortedNames.filter(babyName => babyName.name.toUpperCase().matc).map(baby => baby.sex === \"m\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"babyBoy\",\n    children: baby.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"babyGirl\",\n    children: baby.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"listOfNames\",\n    children: listOfNames\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n_c = FilterNames;\nvar _c;\n$RefreshReg$(_c, \"FilterNames\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FilterNames","props","sortedNames","names","sort","a","b","fa","name","fb","listOfNames","filter","babyName","toUpperCase","matc","map","baby","sex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lorenacapraru/Documents/GitHub/baby-names-react/src/FilterNames.jsx"],"sourcesContent":["import React from \"react\";\n\nexport default function FilterNames(props) {\n  const sortedNames = props.names.sort((a, b) => {\n    let fa = a.name;\n    let fb = b.name;\n\n    if (fa < fb) {\n      return -1;\n    }\n    if (fa > fb) {\n      return 1;\n    }\n    return 0;\n  });\n  const listOfNames = sortedNames.filter(babyName=> babyName.name.toUpperCase().matc).map((baby) =>\n    baby.sex === \"m\" ? (\n      <span className=\"babyBoy\">{baby.name}</span>\n    ) : (\n      <span className=\"babyGirl\">{baby.name}</span>\n    )\n  );\n  return <div className=\"listOfNames\">{listOfNames}</div>;\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,WAAWA,CAACC,KAAK,EAAE;EACzC,MAAMC,WAAW,GAAGD,KAAK,CAACE,KAAK,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAC7C,IAAIC,EAAE,GAAGF,CAAC,CAACG,IAAI;IACf,IAAIC,EAAE,GAAGH,CAAC,CAACE,IAAI;IAEf,IAAID,EAAE,GAAGE,EAAE,EAAE;MACX,OAAO,CAAC,CAAC;IACX;IACA,IAAIF,EAAE,GAAGE,EAAE,EAAE;MACX,OAAO,CAAC;IACV;IACA,OAAO,CAAC;EACV,CAAC,CAAC;EACF,MAAMC,WAAW,GAAGR,WAAW,CAACS,MAAM,CAACC,QAAQ,IAAGA,QAAQ,CAACJ,IAAI,CAACK,WAAW,EAAE,CAACC,IAAI,CAAC,CAACC,GAAG,CAAEC,IAAI,IAC3FA,IAAI,CAACC,GAAG,KAAK,GAAG,gBACdlB,OAAA;IAAMmB,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAEH,IAAI,CAACR;EAAI;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAQ,gBAE5CxB,OAAA;IAAMmB,SAAS,EAAC,UAAU;IAAAC,QAAA,EAAEH,IAAI,CAACR;EAAI;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtC,CACF;EACD,oBAAOxB,OAAA;IAAKmB,SAAS,EAAC,aAAa;IAAAC,QAAA,EAAET;EAAW;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AACzD;AAACC,EAAA,GArBuBxB,WAAW;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}