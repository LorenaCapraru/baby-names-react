{"ast":null,"code":"var _jsxFileName = \"/Users/lorenacapraru/Documents/GitHub/baby-names-react/src/Search.jsx\",\n  _s = $RefreshSig$();\nimport { useState, React } from \"react\";\nimport SplitGender from \"./SplitGender\";\nimport data from \"./babyNamesData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search(_ref) {\n  _s();\n  let {\n    search\n  } = _ref;\n  const [searchInput, setSearchInput] = useState(\"\");\n  function handleSearchInput(event) {\n    setSearchInput(event.target.value);\n  }\n  function handleSearch(event) {\n    event.preventDefault();\n    search(searchInput);\n  }\n  const filteredNames = data.sort((a, b) => {\n    let fa = a.name;\n    let fb = b.name;\n    if (fa < fb) {\n      return -1;\n    }\n    if (fa > fb) {\n      return 1;\n    }\n    return 0;\n  }).filter(babyName => babyName.name.toUpperCase().includes(searchInput.toUpperCase())).map(baby => baby.sex === \"m\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"babyBoy\",\n    children: baby.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"babyGirl\",\n    children: baby.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"searchBar\",\n      type: \"text\",\n      placeholder: \"Search..\",\n      value: searchInput,\n      onChange: handleSearchInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), \"const filteredNames = data\", searchInput === \"\" ? /*#__PURE__*/_jsxDEV(SplitGender, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }, this) : filteredNames]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"7jaUvtQT89vZZF+Gjg+8PUuVm+0=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","React","SplitGender","data","jsxDEV","_jsxDEV","Search","_ref","_s","search","searchInput","setSearchInput","handleSearchInput","event","target","value","handleSearch","preventDefault","filteredNames","sort","a","b","fa","name","fb","filter","babyName","toUpperCase","includes","map","baby","sex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/lorenacapraru/Documents/GitHub/baby-names-react/src/Search.jsx"],"sourcesContent":["import { useState, React } from \"react\";\nimport SplitGender from \"./SplitGender\";\nimport data from \"./babyNamesData.json\";\n\nexport default function Search({ search }) {\n  const [searchInput, setSearchInput] = useState(\"\");\n  function handleSearchInput(event) {\n    setSearchInput(event.target.value);\n  }\n  function handleSearch(event) {\n    event.preventDefault();\n    search(searchInput);\n  }\n\n  const filteredNames = data\n    .sort((a, b) => {\n      let fa = a.name;\n      let fb = b.name;\n\n      if (fa < fb) {\n        return -1;\n      }\n      if (fa > fb) {\n        return 1;\n      }\n      return 0;\n    })\n    .filter((babyName) =>\n      babyName.name.toUpperCase().includes(searchInput.toUpperCase())\n    )\n    .map((baby) =>\n      baby.sex === \"m\" ? (\n        <span className=\"babyBoy\">{baby.name}</span>\n      ) : (\n        <span className=\"babyGirl\">{baby.name}</span>\n      )\n    );\n\n  return (\n    <div className=\"searchDiv\">\n      <input\n        id=\"searchBar\"\n        type=\"text\"\n        placeholder=\"Search..\"\n        value={searchInput}\n        onChange={handleSearchInput}\n      />\n      const filteredNames = data\n      {searchInput === \"\" ? <SplitGender /> : filteredNames}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,KAAK,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAa;EAAAC,EAAA;EAAA,IAAZ;IAAEC;EAAO,CAAC,GAAAF,IAAA;EACvC,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,SAASY,iBAAiBA,CAACC,KAAK,EAAE;IAChCF,cAAc,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC;EACA,SAASC,YAAYA,CAACH,KAAK,EAAE;IAC3BA,KAAK,CAACI,cAAc,EAAE;IACtBR,MAAM,CAACC,WAAW,CAAC;EACrB;EAEA,MAAMQ,aAAa,GAAGf,IAAI,CACvBgB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACd,IAAIC,EAAE,GAAGF,CAAC,CAACG,IAAI;IACf,IAAIC,EAAE,GAAGH,CAAC,CAACE,IAAI;IAEf,IAAID,EAAE,GAAGE,EAAE,EAAE;MACX,OAAO,CAAC,CAAC;IACX;IACA,IAAIF,EAAE,GAAGE,EAAE,EAAE;MACX,OAAO,CAAC;IACV;IACA,OAAO,CAAC;EACV,CAAC,CAAC,CACDC,MAAM,CAAEC,QAAQ,IACfA,QAAQ,CAACH,IAAI,CAACI,WAAW,EAAE,CAACC,QAAQ,CAAClB,WAAW,CAACiB,WAAW,EAAE,CAAC,CAChE,CACAE,GAAG,CAAEC,IAAI,IACRA,IAAI,CAACC,GAAG,KAAK,GAAG,gBACd1B,OAAA;IAAM2B,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAEH,IAAI,CAACP;EAAI;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAQ,gBAE5ChC,OAAA;IAAM2B,SAAS,EAAC,UAAU;IAAAC,QAAA,EAAEH,IAAI,CAACP;EAAI;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtC,CACF;EAEH,oBACEhC,OAAA;IAAK2B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB5B,OAAA;MACEiC,EAAE,EAAC,WAAW;MACdC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBzB,KAAK,EAAEL,WAAY;MACnB+B,QAAQ,EAAE7B;IAAkB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5B,8BAEF,EAAC3B,WAAW,KAAK,EAAE,gBAAGL,OAAA,CAACH,WAAW;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,GAAGnB,aAAa;EAAA;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjD;AAEV;AAAC7B,EAAA,CA/CuBF,MAAM;AAAAoC,EAAA,GAANpC,MAAM;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}